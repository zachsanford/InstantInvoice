<div class="line-item-parent">   
    <EditForm Model="@editLineItem" OnValidSubmit="@AddLineItem">
        <div class="form-div">
            <div>
                <label>Quantity</label>
                <InputNumber min="0" max="100" step="1" @bind-Value="editLineItem.Quantity" />
            </div>
            <div>
                <label>Description</label>
                <InputText placeholder="Description" @bind-Value="editLineItem.Description" />
            </div>
            <div>
                <label>Unit Cost</label>
                <InputNumber min="0.00" step="0.01" @bind-Value="editLineItem.UnitCost" />
            </div>
            <div>
                <button type="submit">Add Line Item</button>
            </div>
        </div>    
    </EditForm>    
    <table>
        <thead>
            <tr>
                <td>Quantity</td>
                <td>Description</td>
                <td>Unit Cost</td>
                <td>Line Total</td>
            </tr>
        </thead>
        <tbody>
            @if (editLineItem != null && PassedLineItem != null)
            {
                @foreach (LineItem item in PassedLineItem)
                {
                    <tr>
                        <td>@item.Quantity</td>
                        <td>@item.Description</td>
                        <td>@item.UnitCost.ToString("C")</td>
                        <td>@item.Total.ToString("C")</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {

    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public List<LineItem>? PassedLineItem { get; set; }
    [Parameter]
    public EventCallback<List<LineItem>> PassedLineItemChanged { get; set; }
    [Parameter]
    public int MaxNumberOfLineItems { get; set; }

    LineItem editLineItem = new LineItem();

    async Task UpdatePassedLineItem()
    {
        await PassedLineItemChanged.InvokeAsync(PassedLineItem);
    }

    void AddLineItem()
    {
        if (PassedLineItem != null)
        {
            if (PassedLineItem.Count < MaxNumberOfLineItems)
            {
                if(editLineItem.Quantity != 0 && !string.IsNullOrEmpty(editLineItem.Description) && editLineItem.UnitCost != 0.00)
                {
                    PassedLineItem.Add(editLineItem);
                    /*
                        TODO:
                        Test to see if we still need UpdatePassedLineItem()
                    */
                    UpdatePassedLineItem();
                    editLineItem = new LineItem();
                }
            }
        }
    }

}